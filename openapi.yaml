# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Article API
    description: The greeting service definition.
    version: 0.0.1
paths:
    /api/articles:
        get:
            tags:
                - Article
            description: List Articles
            operationId: Article_ListArticles
            parameters:
                - name: tag
                  in: query
                  schema:
                    type: string
                - name: author
                  in: query
                  schema:
                    type: string
                - name: favorited
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: offset
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Articles'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Article
            description: Create Article
            operationId: Article_CreateArticle
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateArticleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ArticleReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/articles/feed:
        get:
            tags:
                - Article
            description: Feed Articles
            operationId: Article_FeedArticles
            parameters:
                - name: limit
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: offset
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Articles'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/articles/{slug}:
        get:
            tags:
                - Article
            description: Get Articles
            operationId: Article_GetArticles
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ArticleReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - Article
            description: Update Article
            operationId: Article_UpdateArticle
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateArticleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ArticleReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Article
            description: Delete Article
            operationId: Article_DeleteArticle
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmptyReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/articles/{slug}/comments:
        get:
            tags:
                - Article
            description: Get Comments from an Article
            operationId: Article_GetCommentsFromArticle
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Comments'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Article
            description: Add Comments to an Article
            operationId: Article_AddCommentsToArticle
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddCommentsToArticleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Comment'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/articles/{slug}/comments/{id}:
        delete:
            tags:
                - Article
            description: Delete Comment from an Article
            operationId: Article_DeleteCommentFromArticle
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmptyReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/articles/{slug}/favorite:
        post:
            tags:
                - Article
            description: Favorite Article
            operationId: Article_FavoriteArticle
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/FavoriteArticleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ArticleReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Article
            description: Unfavorite Article
            operationId: Article_UnfavoriteArticle
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ArticleReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/tags:
        get:
            tags:
                - Article
            description: Get Tags
            operationId: Article_GetTags
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Tags'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AddCommentsToArticleRequest:
            type: object
            properties:
                comment:
                    $ref: '#/components/schemas/AddCommentsToArticleRequest_Comment'
                slug:
                    type: string
            description: AddCommentsToArticleRequest
        AddCommentsToArticleRequest_Comment:
            type: object
            properties:
                body:
                    type: string
        ArticleReply:
            type: object
            properties:
                article:
                    $ref: '#/components/schemas/ArticleReply_Data'
            description: Single Article
        ArticleReply_Data:
            type: object
            properties:
                slug:
                    type: string
                title:
                    type: string
                description:
                    type: string
                body:
                    type: string
                tagList:
                    type: array
                    items:
                        type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                favorited:
                    type: boolean
                favoritesCount:
                    type: integer
                    format: int32
                author:
                    $ref: '#/components/schemas/Profile'
        Articles:
            type: object
            properties:
                articles:
                    type: array
                    items:
                        $ref: '#/components/schemas/ArticleReply_Data'
                articlesCount:
                    type: integer
                    format: int32
            description: Multiple Articles
        Comment:
            type: object
            properties:
                comment:
                    $ref: '#/components/schemas/Comment_Data'
            description: Single Comment
        Comment_Data:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                body:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                author:
                    $ref: '#/components/schemas/Profile'
        Comments:
            type: object
            properties:
                comments:
                    type: array
                    items:
                        $ref: '#/components/schemas/Comment_Data'
            description: Multiple Comments
        CreateArticleRequest:
            type: object
            properties:
                article:
                    $ref: '#/components/schemas/CreateArticleRequest_Article'
            description: CreateArticleRequest
        CreateArticleRequest_Article:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                body:
                    type: string
                tagList:
                    type: array
                    items:
                        type: string
        EmptyReply:
            type: object
            properties: {}
            description: EmptyReply
        FavoriteArticleRequest:
            type: object
            properties:
                slug:
                    type: string
            description: FavoriteArticleRequest
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        Profile:
            type: object
            properties:
                profile:
                    $ref: '#/components/schemas/Profile_Data'
            description: Profile
        Profile_Data:
            type: object
            properties:
                username:
                    type: string
                bio:
                    type: string
                image:
                    type: string
                following:
                    type: boolean
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        Tags:
            type: object
            properties:
                tags:
                    $ref: '#/components/schemas/Tags_Data'
            description: List of Tags
        Tags_Data:
            type: object
            properties:
                tags:
                    type: array
                    items:
                        type: string
        UpdateArticleRequest:
            type: object
            properties:
                article:
                    $ref: '#/components/schemas/UpdateArticleRequest_Article'
                slug:
                    type: string
            description: UpdateArticleRequest
        UpdateArticleRequest_Article:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                body:
                    type: string
                tagList:
                    type: array
                    items:
                        type: string
tags:
    - name: Article
